if images.length === 0
	p No matching images found.
else
	each image, index in images
		- const folderName = image.directory
		- const imageName = image.baseName
		- const imageNameNoExt = imageName.replace(/\.[^/.]+$/, "")
		- const imageLinkEscaped = encodeURIComponent(image.imagePath)
		//- this sets the approximate size of a row height in tiles mode
		//- it is in rem units and 25 is around 50% of a 1080p screen with the provided css
		- const baseSize = 25
		- const width = (image.width * baseSize / image.height)*multiplier
		- const padding = image.height / image.width * 100
		- const idNum = (50*(page-1)+index)
		- resultStyle = `width: ${width}rem; flex-grow: ${width}`
		- istyle = `padding-bottom: ${padding}%`
		div.result(data-width=width
			style = `${view && view === 'tiles' ? resultStyle : ""}`
			id = 'result'+ idNum
			)
			i(
				data-padding = padding 
				style = `${view && view === 'tiles' ? istyle : ""}`
				)
			div.imageSidebar(style=(multiplier <= 0.5) ? 'display: none' : '')
				div.contextMenu
					button.contextMenuButton.sidebarButton(onclick="toggleContextMenu(this)" title = "Context Menu")
						img.contextMenuIcon.actionButtonIcon(src = "/icons/contextMenu.svg")
					.additionalButtons
						a.extraButton.sidebarButton.urlButton(
							href = `${imageLinkEscaped}` target = "_blank"
						)
							img.contextMenuIcon.actionButtonIcon(src = "/icons/url.svg")
						button.extraButton.sidebarButton.shareButton(onclick = `shareExternally('${imageLinkEscaped}')`)
							img.contextMenuIcon.actionButtonIcon(src = "/icons/share.svg")
				div.rename
					button.renameButton.sidebarButton(onclick = 'showRenameDialog(this)')
						img.renameIcon.actionButtonIcon(src = "/icons/rename.svg")
					dialog.renameDialog
						form.renameForm
							input.idNum(type = "text" name = 'idNum'
								value = idNum readonly hidden)
							input.currentFilePath(type = "text" name = 'currentFilePath'
								placeholder = 'Curent File Path' value = image.imagePath readonly hidden)
							input.newFileName(type = "text" name = 'newFileName'
								value = imageNameNoExt
								placeholder = 'New Name (press Enter)' required)
							input(type="submit" hidden)
				div.infoDiv.marquee-container
					- let similarImageLink = encodeURIComponent(imageName.replace(/\.[^/.]+$/, "").replace(/\d+$/, "").replace(/\(\d*\)|\d+$/g, "").trim())
					.marquee.marquee1
						a.imageTitle(
							id = 'imageTitle'+idNum
							href = '/search?searchText=' + similarImageLink + '&view=' + view + '&sortBy=shuffle'
							target = "_blank")
							| #{imageName} 
					.marquee.marquee2
						a.subTitle(
							id = 'imageTitle'+idNum
							href = '/search?searchText=' + imageLinkEscaped + '>&view=' + view + '&sortBy=path&sortAsc=true'
							target = "_blank")
							|#{image.resolution} (#{image.sizeReadable})
					- const pathSegments = folderName.split('\\').slice(1, -1);
					- let currentPath = '';
					.marquee.marquee3(id = 'subTitle'+idNum)
						each pathSegment, index in pathSegments
							- currentPath += '\\' + pathSegment
							a.subTitle(
								href = '/search?searchText=' + encodeURIComponent(currentPath) + '&view=' + view + '&sortBy=shuffle'
								target = "_blank")
								|  / #{pathSegment}
				div.deleteDiv
					button.deleteButton.sidebarButton(onclick = `deleteFile("${image.imagePath.replace(/\\/g, "\\\\")}", "${idNum}")` title = "delete")
						img.deleteIcon.actionButtonIcon(src = "/icons/delete.svg")
			div.mainContent
				a.contentLink(data-href='/?imageBackLink=' + imageLinkEscaped)
					if (image.type === 'image')
						img.searchImg.resultFile(
							id = 'image'+idNum
							title = imageName
							src = imageLinkEscaped)
					else
						// Generate the thumbnail URL
						- var thumbnailUrl = '/thumbnail?videoPath=' + encodeURIComponent(imageLinkEscaped)
						// Use a container for the video thumbnail
						.thumbnailContainer
							img.thumbnail(
								src = thumbnailUrl
							)
							span.thumbnailOverlay
								| â–· 
						video.searchVid.resultFile.videoFile(
							id = 'image' + idNum
							data-src = imageLinkEscaped
							controls
							loop
							style="display: none;"
							onplay="pauseOtherVideos(this);"
							poster = thumbnailUrl
						)