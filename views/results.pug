if images.length === 0
	p No matching images found.
else
	each image, index in images
		- const imagePath = image.imagePath
		- const folderName = image.directory
		- const imageName = image.baseName
		- const imageResolution = image.resolution
		- const imageSizeReadable = image.sizeReadable
		- const imageNameNoExt = imageName.replace(/\.[^/.]+$/, "")
		- const imageLinkEscaped = encodeURIComponent(image.imagePath)
		//- this sets the approximate size of a row height in tiles mode
		//- it is in rem units and 25 is around 50% of a 1080p screen with the provided css
		- const baseSize = 25
		- const width = (image.width * baseSize / image.height)*multiplier
		- const padding = image.height / image.width * 100
		- const idNum = (50*(page-1)+index)
		- resultStyle = `width: ${width}rem; flex-grow: ${width}`
		- istyle = `padding-bottom: ${padding}%`
		div.result(data-width=width
			style = `${view && view === 'tiles' ? resultStyle : ""}`
			id = 'result'+ idNum
			)
			i(
				data-padding = padding 
				style = `${view && view === 'tiles' ? istyle : ""}`
				)
			div.imageSidebar(style=(multiplier <= 1) ? 'display: none' : '')
				include image-details.pug
			div.mainContent
				a.contentLink(data-href='/?imageBackLink=' + imageLinkEscaped)
					if (image.type === 'image')
						img.searchImg.resultFile(
							id = 'image'+idNum
							title = imageName
							src = imageLinkEscaped
							data-src = imageLinkEscaped)
					else
						// Generate the thumbnail URL
						- var thumbnailUrl = '/thumbnail?videoPath=' + encodeURIComponent(imageLinkEscaped)
						// Use a container for the video thumbnail
						.thumbnailContainer
							img.thumbnail(
								src = thumbnailUrl
							)
							span.thumbnailOverlay
								| â–· 
						video.searchVid.resultFile.videoFile(
							id = 'image' + idNum
							data-src = imageLinkEscaped
							controls
							loop
							style="display: none;"
							onplay="pauseOtherVideos(this);"
							ontimeupdate="updateProgressBar(this);"
							poster = thumbnailUrl
						)
						.progressBarContainer
						.progressBar