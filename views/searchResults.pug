doctype html
html
	head
		meta(charset="UTF-8")
		meta(name="viewport" content="width=device-width, initial-scale=1.0")
		title Search Results
		if view && view === 'tiles'
			link(id = 'stylesheet' rel = 'stylesheet' href = "/css/search-results-tiles.css")
		else
			link(id = 'stylesheet' rel = 'stylesheet' href = "/css/search-results.css")
		link(rel = 'stylesheet' href = '/css/iv-viewer.css')
	body
		button(id = "sidebarToggleButton" onclick = "toggleSidebar()" title = 'F2') ùÑô
		div(id = "sidebar")
			h2 Bulk Actions
			div.bulkRow
				input(type = "text" id = 'renameBulkText' name = 'renameBulkText'
				placeholder = "Rename")
				button(id = 'renameBulkButton' onclick = 'renameBulk()') GO
		div.mainDiv
			div.header
				div.headingDiv
					a(href='/' title = 'HOME')
						h1 Search Results for "#{searchText}"
					h2 Showing #{images.length}/#{totalResultCount} results (Page #{page}/#{totalPages})
				div.controlsDiv
					form.searchForm(action = "" method = "get" target = 'blank')
						input(type = "text" name = 'searchText' id = 'searchText'
						placeholder = 'Search' onfocus = 'this.select()' 
						title = 'F3')
						input(type = "hidden" name = 'view' id = 'view')
						div.shuffleDiv
							label(for="shuffle") Shuffle
							if shuffle
								input(
									type = "checkbox" 
									id = "shuffle" 
									name = "shuffle" 
									onclick = 'shuffleToggle()', 
									checked
									)
							else
								input(
									type = "checkbox" 
									id = "shuffle" 
									name = "shuffle" 
									onclick = 'shuffleToggle()'
									title = 'S'
									)
					div.zoomAndConfig
						div.buttonControls#sliderContainer
							label(for = "slider") Zoom
							input.slider(
								type = "range" 
								min = "0.5" max="2.5" 
								step = "0.1" value="1" 
								id = "slider"
								name = slider 
								oninput = 'changeTileSize()'
								ondblclick = 'this.value = 1; changeTileSize()'
								title = '<- ArrowLeft - ArrowRight ->'
								)
						div.config.buttonControls
							button.default(id = 'configButton' onclick = "window.open('/config', '_blank')" title = 'settings') üõ†
					div.scaleButtons.buttonControls
						button.default(
							onclick = 'showAllImagesAtActualSize()'
							) Actual
						button.default(
							onclick = 'showAllImagesStreched()'
							) Fit
						button.default(
							onclick = 'showAllImagesAtDefaultScale()'
							) Default
					div.switchViews.buttonControls
						button.default(
							id = 'switchToTileViewButton' 
							onclick = 'switchToTileView()'
							) Tile View
			//- uncomment this if you want to scroll horizontally with mousewheen
			//- - div.results(onwheel="this.scrollLeft += event.deltaY * 2" 
				onmouseenter="stopMainScroll()" onmouseleave="allowMainScroll()")
			div.results
				if images.length === 0
					p No matching images found.
				else
					each image, index in images
						- const folderName = image.directory
						- const imageName = image.baseName
						- const imageLinkEscaped = encodeURIComponent(image.path)
						//- this sets the approximate size of a row height in tiles mode
						//- it is in rem units and 25 is around 50% of a 1080p screen with the provided css
						- const baseSize = 25
						- const width = image.width * baseSize / image.height
						- const padding = image.height / image.width * 100
						- resultStyle = `width: ${width}rem; flex-grow: ${width}`
						- istyle = `padding-bottom: ${padding}%`
						div.result(data-width=width
							style = `${view && view === 'tiles' ? resultStyle : ""}`
							)
							i(
								data-padding = padding 
								style = `${view && view === 'tiles' ? istyle : ""}`
								)
							div.imageSidebar
								div.actionButtons
									button.hideSimilarButton ‚õî
									button.showAtActualScaleButton(
										onclick = `showAtActualScale(${index})`
										) ‚≠ï
								div.rename
									button.renameButton(onclick = 'showRenameDialog(this)') &#9998;
									dialog.renameDialog
										form.renameForm
											input(type = "text" name = 'currentFilePath' id = 'currentFilePath' 
												placeholder = 'Curent File Path' value = imageLinkEscaped readonly hidden)
											input(type = "text" name = 'newFileName' id = 'newFileName'
												placeholder = 'New File Name' required)
											input(type="submit" hidden)
								div.infoDiv
									- let similarImageLink = encodeURIComponent(imageName.replace(/\.[^/.]+$/, "").replace(/\d+$/, "").replace(/\(\d*\)|\d+$/g, "").trim())
									a.imageTitle(
										href = '/search?searchText=' + similarImageLink + '&view=' + view
										target = "blank")
										| #{imageName} 
									- let folderlink = encodeURIComponent(folderName)
									a.subTitle(
										href = '/search?searchText=' + folderlink + '&view=' + view
										target = "blank")
										|#{folderName}
							div.mainContent
								a.contentLink(data-href='/?imageBackLink=' + imageLinkEscaped
									ondblclick=`location.href="/singleView?imageBackLink=${imageLinkEscaped}"`
									)
									if (image.type === 'image')
										img.searchImg.resultFile(id = 'image'+index src = imageLinkEscaped)
									else
										video.searchVid.resultFile.videoFile(id = 'image'+index data-src = imageLinkEscaped controls loop)
			if totalPages > 1 && !shuffle
				div.pagination
					div.pageButtons(
						onwheel = "this.scrollLeft += event.deltaY" 
						onmouseenter = "stopMainScroll()" 
						onmouseleave = "allowMainScroll()")
						each page_num in Array(totalPages).fill().map((_, i) => i + 1)
							if page_num == page
								a.pageButton.active(
									href = `/search?searchText=${searchText}&view=${view}&page=${page_num}`
									)= page_num
							else
								a.pageButton(
									href = `/search?searchText=${searchText}&view=${view}&page=${page_num}`
									)= page_num
					div.navigationButtons
						if page > 1
							a#firstPageButtom(
								href = `/search?searchText=${searchText}&view=${view}&page=1`
								title = 'First Page') [1<
							a#previousPageButton(
								href = `/search?searchText=${searchText}&view=${view}&page=${page - 1}`
								title = 'Previous Page'
								) #{page - 1}<
						if page < totalPages
							a#nextPageButton(
								href = `/search?searchText=${searchText}&view=${view}&page=${page - (-1)}`
								title = 'Next Page'
								) >#{page - (-1)}
							a#lastPageButton(
								href = `/search?searchText=${searchText}&view=${view}&page=${totalPages}`
								title = 'Last Page'
								) >#{totalPages}]
			div.dummyFooter
		button#fullscreenButton(
			title = 'Fullscreen (Alt + Enter)'
			onclick = 'goFullscreen()'
			) ‚óπ
		button(onclick = "document.documentElement.scrollTop = 0"
		id = "scrollToTopButton" title = "Scroll to Top (Alt + T)"
		) ‚§í
		div.modal#modal
			div.modalImageContainer
			div.modalVideoContainer
				video.modalVideo.videoFile(src = '' controls loop autoplay)
			span#modalCloseButton(title = 'Close')
				| &times;
			span#modalNextFromResultsButton(title = 'Next from search results (right)')
				| &RightAngleBracket;
			span#modalPreviousFromResultsButton(title = 'Previous from search results (left)')
				| &LeftAngleBracket;
			span#modalNextButton(title = 'Next from directory (shift + right)')
				| &Rang;
			span#modalPreviousButton(title = 'Previous from directory (shift + left)')
				| &Lang;
		script(src = '/js/searchResults.js')
		script(src = '/js/iv-viewer.js')